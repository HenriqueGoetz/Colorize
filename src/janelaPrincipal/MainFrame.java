/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package janelaPrincipal;

import java.awt.Color;
import java.awt.Point;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.SwingConstants;

/**
 *
 * @author Henrique Goetz
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    BufferedImage imagemcolorida = null;
    BufferedImage imagemgreyscale = null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblImagemColorida = new javax.swing.JLabel();
        lblImagemGreyScale = new javax.swing.JLabel();
        pnlSwatch = new javax.swing.JPanel();
        btnColorize = new javax.swing.JButton();
        pnlColoridaSwatch = new javax.swing.JPanel();
        pnlColoridaSwatch1 = new javax.swing.JPanel();
        txtColoridaXSegundoSW1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtColoridaXPrimeiroSW1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtColoridaYSegundoSW1 = new javax.swing.JTextField();
        txtColoridaYPrimeiroSW1 = new javax.swing.JTextField();
        pnlColoridaSwatch2 = new javax.swing.JPanel();
        txtColoridaXSegundoSW2 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtColoridaXPrimeiroSW2 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtColoridaYSegundoSW2 = new javax.swing.JTextField();
        txtColoridaYPrimeiroSW2 = new javax.swing.JTextField();
        pnlGreyscaleSwatch = new javax.swing.JPanel();
        pnlGreyscaleSwatch1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtGrayscaleXPrimeiroSW1 = new javax.swing.JTextField();
        txtGrayscaleXSegundoSW1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtGrayscaleYPrimeiroSW1 = new javax.swing.JTextField();
        txtGrayscaleYSegundoSW1 = new javax.swing.JTextField();
        pnlGreyscaleSwatch2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtGrayscaleXPrimeiroSW2 = new javax.swing.JTextField();
        txtGrayscaleXSegundoSW2 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtGrayscaleYPrimeiroSW2 = new javax.swing.JTextField();
        txtGrayscaleYSegundoSW2 = new javax.swing.JTextField();
        btnCarregarColorida = new javax.swing.JButton();
        btnCarregarGreyScale = new javax.swing.JButton();
        txtNome = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblImagemColorida.setText("Imagem com as cores fonte ainda não selecionada.");

        lblImagemGreyScale.setText("Imagem a ser colorida ainda não selecionada.");

        pnlSwatch.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnColorize.setText("Colorize");
        btnColorize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColorizeActionPerformed(evt);
            }
        });

        pnlColoridaSwatch.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Na imagem colorida", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        pnlColoridaSwatch1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Swatch 1"));

        jLabel3.setText("X:");

        jLabel1.setText("X:");

        jLabel2.setText("Y:");

        jLabel4.setText("Y:");

        javax.swing.GroupLayout pnlColoridaSwatch1Layout = new javax.swing.GroupLayout(pnlColoridaSwatch1);
        pnlColoridaSwatch1.setLayout(pnlColoridaSwatch1Layout);
        pnlColoridaSwatch1Layout.setHorizontalGroup(
            pnlColoridaSwatch1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlColoridaSwatch1Layout.createSequentialGroup()
                .addGroup(pnlColoridaSwatch1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlColoridaSwatch1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(pnlColoridaSwatch1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(pnlColoridaSwatch1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtColoridaXSegundoSW1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtColoridaXPrimeiroSW1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(pnlColoridaSwatch1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlColoridaSwatch1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtColoridaYSegundoSW1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlColoridaSwatch1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtColoridaYPrimeiroSW1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14))
        );
        pnlColoridaSwatch1Layout.setVerticalGroup(
            pnlColoridaSwatch1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlColoridaSwatch1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlColoridaSwatch1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtColoridaXPrimeiroSW1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtColoridaYPrimeiroSW1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlColoridaSwatch1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtColoridaXSegundoSW1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(txtColoridaYSegundoSW1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        pnlColoridaSwatch2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Swatch 2"));

        jLabel9.setText("X:");

        jLabel10.setText("X:");

        jLabel11.setText("Y:");

        jLabel12.setText("Y:");

        javax.swing.GroupLayout pnlColoridaSwatch2Layout = new javax.swing.GroupLayout(pnlColoridaSwatch2);
        pnlColoridaSwatch2.setLayout(pnlColoridaSwatch2Layout);
        pnlColoridaSwatch2Layout.setHorizontalGroup(
            pnlColoridaSwatch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlColoridaSwatch2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtColoridaXSegundoSW2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(pnlColoridaSwatch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlColoridaSwatch2Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtColoridaYSegundoSW2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlColoridaSwatch2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtColoridaYPrimeiroSW2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14))
            .addGroup(pnlColoridaSwatch2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtColoridaXPrimeiroSW2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(107, 107, 107))
        );
        pnlColoridaSwatch2Layout.setVerticalGroup(
            pnlColoridaSwatch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlColoridaSwatch2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlColoridaSwatch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtColoridaXPrimeiroSW2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(txtColoridaYPrimeiroSW2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlColoridaSwatch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtColoridaXSegundoSW2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel12)
                    .addComponent(txtColoridaYSegundoSW2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout pnlColoridaSwatchLayout = new javax.swing.GroupLayout(pnlColoridaSwatch);
        pnlColoridaSwatch.setLayout(pnlColoridaSwatchLayout);
        pnlColoridaSwatchLayout.setHorizontalGroup(
            pnlColoridaSwatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlColoridaSwatchLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlColoridaSwatch1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlColoridaSwatch2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        pnlColoridaSwatchLayout.setVerticalGroup(
            pnlColoridaSwatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlColoridaSwatchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlColoridaSwatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlColoridaSwatch1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(pnlColoridaSwatchLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(pnlColoridaSwatch2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pnlGreyscaleSwatch.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Na imagem grayscale", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));
        pnlGreyscaleSwatch.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        pnlGreyscaleSwatch1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Swatch 1"));

        jLabel5.setText("X:");

        jLabel7.setText("X:");

        jLabel6.setText("Y:");

        jLabel8.setText("Y:");

        javax.swing.GroupLayout pnlGreyscaleSwatch1Layout = new javax.swing.GroupLayout(pnlGreyscaleSwatch1);
        pnlGreyscaleSwatch1.setLayout(pnlGreyscaleSwatch1Layout);
        pnlGreyscaleSwatch1Layout.setHorizontalGroup(
            pnlGreyscaleSwatch1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGreyscaleSwatch1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGreyscaleSwatch1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGreyscaleSwatch1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGrayscaleXPrimeiroSW1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGrayscaleYPrimeiroSW1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlGreyscaleSwatch1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGrayscaleXSegundoSW1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGrayscaleYSegundoSW1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlGreyscaleSwatch1Layout.setVerticalGroup(
            pnlGreyscaleSwatch1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGreyscaleSwatch1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlGreyscaleSwatch1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtGrayscaleXPrimeiroSW1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtGrayscaleYPrimeiroSW1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlGreyscaleSwatch1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtGrayscaleXSegundoSW1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtGrayscaleYSegundoSW1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        pnlGreyscaleSwatch2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Swatch 2"));

        jLabel13.setText("X:");

        jLabel14.setText("X:");

        jLabel15.setText("Y:");

        jLabel16.setText("Y:");

        javax.swing.GroupLayout pnlGreyscaleSwatch2Layout = new javax.swing.GroupLayout(pnlGreyscaleSwatch2);
        pnlGreyscaleSwatch2.setLayout(pnlGreyscaleSwatch2Layout);
        pnlGreyscaleSwatch2Layout.setHorizontalGroup(
            pnlGreyscaleSwatch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGreyscaleSwatch2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGreyscaleSwatch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGreyscaleSwatch2Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGrayscaleXPrimeiroSW2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGrayscaleYPrimeiroSW2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlGreyscaleSwatch2Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGrayscaleXSegundoSW2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGrayscaleYSegundoSW2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlGreyscaleSwatch2Layout.setVerticalGroup(
            pnlGreyscaleSwatch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGreyscaleSwatch2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlGreyscaleSwatch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtGrayscaleXPrimeiroSW2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(txtGrayscaleYPrimeiroSW2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlGreyscaleSwatch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtGrayscaleXSegundoSW2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(txtGrayscaleYSegundoSW2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout pnlGreyscaleSwatchLayout = new javax.swing.GroupLayout(pnlGreyscaleSwatch);
        pnlGreyscaleSwatch.setLayout(pnlGreyscaleSwatchLayout);
        pnlGreyscaleSwatchLayout.setHorizontalGroup(
            pnlGreyscaleSwatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGreyscaleSwatchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlGreyscaleSwatch1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlGreyscaleSwatch2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlGreyscaleSwatchLayout.setVerticalGroup(
            pnlGreyscaleSwatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGreyscaleSwatchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGreyscaleSwatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlGreyscaleSwatch2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlGreyscaleSwatch1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlSwatchLayout = new javax.swing.GroupLayout(pnlSwatch);
        pnlSwatch.setLayout(pnlSwatchLayout);
        pnlSwatchLayout.setHorizontalGroup(
            pnlSwatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSwatchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlColoridaSwatch, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlGreyscaleSwatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnColorize, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlSwatchLayout.setVerticalGroup(
            pnlSwatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSwatchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSwatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlGreyscaleSwatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlColoridaSwatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 14, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSwatchLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnColorize, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        pnlGreyscaleSwatch.getAccessibleContext().setAccessibleName("Na imagem greyscale");

        btnCarregarColorida.setText("Carregar Imagem Colorida");
        btnCarregarColorida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarregarColoridaActionPerformed(evt);
            }
        });

        btnCarregarGreyScale.setText("Carregar Imagem Greyscale");
        btnCarregarGreyScale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarregarGreyScaleActionPerformed(evt);
            }
        });

        txtNome.setText("NomedaImagem");

        btnSalvar.setText("Salvar ");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(pnlSwatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblImagemColorida, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCarregarColorida))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblImagemGreyScale, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCarregarGreyScale)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSalvar)
                                .addGap(5, 5, 5)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCarregarColorida)
                    .addComponent(btnCarregarGreyScale)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalvar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblImagemGreyScale, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblImagemColorida, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlSwatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private BufferedImage newCopy(BufferedImage image) {

        BufferedImage newImage = new BufferedImage(image.getWidth(), image.getHeight(), BufferedImage.TYPE_INT_ARGB);

        for (int x = 0; x < image.getWidth(); x++) {
            for (int y = 0; y < image.getHeight(); y++) {
                newImage.setRGB(x, y, image.getRGB(x, y));
            }
        }
        return newImage;
    }

    private BufferedImage toGreyScale(BufferedImage image) {

        BufferedImage newImage = newCopy(image);

        int width = newImage.getWidth();
        int height = newImage.getHeight();

        for (int row = 0; row < height; row++) {
            for (int col = 0; col < width; col++) {
                int rgb = newImage.getRGB(col, row);

                Color c = new Color(rgb);
                int red = c.getRed();
                int green = c.getGreen();
                int blue = c.getBlue();
                int k = (int) ((red * 0.299) + (0.587 * green) + (0.114 * blue));

                Color greyscale = new Color(k, k, k);
                newImage.setRGB(col, row, greyscale.getRGB());
            }
        }
        return newImage;
    }

    private void btnColorizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColorizeActionPerformed

        if (imagemcolorida == null || imagemgreyscale == null) {
            System.out.println("\nImagem não carregada.\n");
        } else {

            Point swatch1Pcolorida = null;
            Point swatch1Scolorida = null;
            Point swatch1Pgrayscale = null;
            Point swatch1Sgrayscale = null;
            Point swatch2Pcolorida = null;
            Point swatch2Scolorida = null;
            Point swatch2Pgrayscale = null;
            Point swatch2Sgrayscale = null;

            BufferedImage imagemcoloridaemgrayscale = newCopy(imagemcolorida);

            imagemcoloridaemgrayscale = toGreyScale(imagemcoloridaemgrayscale);

            BufferedImage imagemresultante = new BufferedImage(imagemgreyscale.getWidth(), imagemgreyscale.getHeight(), BufferedImage.TYPE_INT_ARGB);

            imagemresultante = colorizando(imagemcoloridaemgrayscale, imagemresultante);

            if (executaSW1()) {
                swatch1Pcolorida = new Point(Integer.valueOf(txtColoridaXPrimeiroSW1.getText()), Integer.valueOf(txtColoridaYPrimeiroSW1.getText()));
                swatch1Scolorida = new Point(Integer.valueOf(txtColoridaXSegundoSW1.getText()), Integer.valueOf(txtColoridaYSegundoSW1.getText()));
                swatch1Pgrayscale = new Point(Integer.valueOf(txtGrayscaleXPrimeiroSW1.getText()), Integer.valueOf(txtGrayscaleYPrimeiroSW1.getText()));
                swatch1Sgrayscale = new Point(Integer.valueOf(txtGrayscaleXSegundoSW1.getText()), Integer.valueOf(txtGrayscaleYSegundoSW1.getText()));
                imagemresultante = colorizandoSwatch(imagemresultante, swatch1Pcolorida, swatch1Scolorida, swatch1Pgrayscale, swatch1Sgrayscale, imagemcoloridaemgrayscale);
            }
            if (executaSW2()) {
                swatch2Pcolorida = new Point(Integer.valueOf(txtColoridaXPrimeiroSW2.getText()), Integer.valueOf(txtColoridaYPrimeiroSW2.getText()));
                swatch2Scolorida = new Point(Integer.valueOf(txtColoridaXSegundoSW2.getText()), Integer.valueOf(txtColoridaYSegundoSW2.getText()));
                swatch2Pgrayscale = new Point(Integer.valueOf(txtGrayscaleXPrimeiroSW2.getText()), Integer.valueOf(txtGrayscaleYPrimeiroSW2.getText()));
                swatch2Sgrayscale = new Point(Integer.valueOf(txtGrayscaleXSegundoSW2.getText()), Integer.valueOf(txtGrayscaleYSegundoSW2.getText()));
                imagemresultante = colorizandoSwatch(imagemresultante, swatch2Pcolorida, swatch2Scolorida, swatch2Pgrayscale, swatch2Sgrayscale, imagemcoloridaemgrayscale);
            }

            imagemgreyscale = newCopy(imagemresultante);

            lblImagemColorida.setIcon(new ImageIcon(imagemcolorida));
            lblImagemColorida.setHorizontalAlignment(SwingConstants.CENTER);
            lblImagemGreyScale.setIcon(new ImageIcon(imagemgreyscale));
            lblImagemGreyScale.setHorizontalAlignment(SwingConstants.CENTER);
        }

    }//GEN-LAST:event_btnColorizeActionPerformed

    private boolean executaSW1() {
        return !(txtColoridaXPrimeiroSW1.getText().trim().equals("") || txtColoridaYPrimeiroSW1.getText().trim().equals("") || txtColoridaXSegundoSW1.getText().trim().equals("") || txtColoridaYSegundoSW1.getText().trim().equals("") || txtGrayscaleXPrimeiroSW1.getText().trim().equals("") || txtGrayscaleYPrimeiroSW1.getText().trim().equals("") || txtGrayscaleXSegundoSW1.getText().trim().equals("") || txtGrayscaleYSegundoSW1.getText().trim().equals(""));
    }

    private boolean executaSW2() {
        return !(txtColoridaXPrimeiroSW2.getText().trim().equals("") || txtColoridaYPrimeiroSW2.getText().trim().equals("") || txtColoridaXSegundoSW2.getText().trim().equals("") || txtColoridaYSegundoSW2.getText().trim().equals("") || txtGrayscaleXPrimeiroSW2.getText().trim().equals("") || txtGrayscaleYPrimeiroSW2.getText().trim().equals("") || txtGrayscaleXSegundoSW2.getText().trim().equals("") || txtGrayscaleYSegundoSW2.getText().trim().equals(""));
    }

    private BufferedImage colorizando(BufferedImage imagemcoloridaemgrayscale, BufferedImage imagemresultante) {
        int foramx = 0;

        for (int rows = 1; rows < imagemcoloridaemgrayscale.getHeight() - 1; rows++) {
            for (int cols = 1; cols < imagemcoloridaemgrayscale.getWidth() - 1; cols++) {

                Point posicao = encontraMaisSemelhante(cols, rows, imagemcoloridaemgrayscale);
                int x = posicao.x;
                int y = posicao.y;

                int rgb = imagemcolorida.getRGB(x, y);

                Color temp = new Color(rgb);
                imagemresultante.setRGB(cols, rows, temp.getRGB());
            }

            foramx++;

            System.out.println(imagemgreyscale.getHeight() - foramx);
        }
        System.out.println("Fim");

        return imagemresultante;
    }

    private BufferedImage colorizandoSwatch(BufferedImage imagemresultante, Point colorida1, Point colorida2, Point grayscale1, Point grayscale2, BufferedImage imagemcoloridaemgrayscale) {

        for (int cols = grayscale1.x; cols < grayscale2.x - 1; cols++) {
            for (int rows = grayscale1.y; rows < grayscale2.y - 1; rows++) {

                Point posicao = encontraMaisSemelhante(cols, rows, imagemcoloridaemgrayscale, colorida1, colorida2);
                int x = posicao.x;
                int y = posicao.y;
                int rgb = imagemcolorida.getRGB(x, y);
                Color temp = new Color(rgb);
                imagemresultante.setRGB(cols, rows, temp.getRGB());
            }
        }

        return imagemresultante;
    }

    private void btnCarregarColoridaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarregarColoridaActionPerformed
        // Carrega a imagem colorida.

        JFileChooser jfc = new JFileChooser();

        if (jfc.showOpenDialog(btnCarregarColorida) == JFileChooser.APPROVE_OPTION) {
            try {
                imagemcolorida = ImageIO.read(jfc.getSelectedFile());
                lblImagemColorida.setText("");
                lblImagemColorida.setIcon(new ImageIcon(imagemcolorida));
                lblImagemColorida.setHorizontalAlignment(SwingConstants.CENTER);
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnCarregarColoridaActionPerformed

    private void btnCarregarGreyScaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarregarGreyScaleActionPerformed
        // Carrega a imagem em grayscale.

        JFileChooser jfc = new JFileChooser();

        if (jfc.showOpenDialog(btnCarregarColorida) == JFileChooser.APPROVE_OPTION) {
            try {
                imagemgreyscale = ImageIO.read(jfc.getSelectedFile());
                lblImagemGreyScale.setText("");
                imagemgreyscale = toGreyScale(imagemgreyscale);
                lblImagemGreyScale.setIcon(new ImageIcon(imagemgreyscale));
                lblImagemGreyScale.setHorizontalAlignment(SwingConstants.CENTER);
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnCarregarGreyScaleActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        //Salva a imagem resultante.

        if (!txtNome.getText().equals("")) {
            try {
                ImageIO.write(imagemgreyscale, "PNG", new File("Imagens/" + txtNome.getText() + ".png"));
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_btnSalvarActionPerformed

    // Quando sem swatch.
    private Point encontraMaisSemelhante(int cols, int rows, BufferedImage imagemcoloridaemgrayscale) {
        int x1 = 0;
        int x2 = 0;
        double maissemelhante = 1000; //Apenas inicializando, no primeiro caso do for será modificado.

        // Coletando pixels vizinhos.
        int a = imagemgreyscale.getRGB(cols - 1, rows - 1);
        int b = imagemgreyscale.getRGB(cols, rows - 1);
        int c = imagemgreyscale.getRGB(cols + 1, rows - 1);
        int d = imagemgreyscale.getRGB(cols - 1, rows);
        int e = imagemgreyscale.getRGB(cols, rows);
        int f = imagemgreyscale.getRGB(cols + 1, rows);
        int g = imagemgreyscale.getRGB(cols - 1, rows + 1);
        int h = imagemgreyscale.getRGB(cols, rows + 1);
        int i = imagemgreyscale.getRGB(cols + 1, rows + 1);

        // Verificando o pixel mais semelhante na imagem.
        for (int x = 1; x < imagemcoloridaemgrayscale.getWidth() - 1; x++) {
            for (int y = 1; y < imagemcoloridaemgrayscale.getHeight() - 1; y++) {
                int A = imagemcoloridaemgrayscale.getRGB(x - 1, y - 1);
                int B = imagemcoloridaemgrayscale.getRGB(x, y - 1);
                int C = imagemcoloridaemgrayscale.getRGB(x + 1, y - 1);
                int D = imagemcoloridaemgrayscale.getRGB(x - 1, y);
                int E = imagemcoloridaemgrayscale.getRGB(x, y);
                int F = imagemcoloridaemgrayscale.getRGB(x + 1, y);
                int G = imagemcoloridaemgrayscale.getRGB(x - 1, y + 1);
                int H = imagemcoloridaemgrayscale.getRGB(x, y + 1);
                int I = imagemcoloridaemgrayscale.getRGB(x + 1, y + 1);

                if (x == 1 && y == 1) {
                    x1 = 1;
                    x2 = 1;
                    maissemelhante = (Math.abs(E - e) * 0.5) + 0.5 * (Math.abs(A - a) + Math.abs(B - b) + Math.abs(C - c) + Math.abs(D - d) + Math.abs(F - f) + Math.abs(G - g) + Math.abs(H - h) + Math.abs(I - i));
                } else {
                    double novo = (Math.abs(E - e) * 0.5) + 0.5 * (Math.abs(A - a) + Math.abs(B - b) + Math.abs(C - c) + Math.abs(D - d) + Math.abs(F - f) + Math.abs(G - g) + Math.abs(H - h) + Math.abs(I - i));
                    if (maissemelhante > novo) {
                        x1 = x;
                        x2 = y;
                        maissemelhante = novo;
                    }
                }
            }
        }

        return new Point(x1, x2);
    }

    // Quando usado swatch.
    private Point encontraMaisSemelhante(int cols, int rows, BufferedImage imagemcoloridaemgrayscale, Point inicio, Point fim) {
        int x1 = 0;
        int x2 = 0;
        double maissemelhante = 1000; //Apenas inicializando, no primeiro caso do for será modificado.

        // Coletando pixels vizinhos.
        int a = imagemgreyscale.getRGB(cols - 1, rows - 1);
        int b = imagemgreyscale.getRGB(cols, rows - 1);
        int c = imagemgreyscale.getRGB(cols + 1, rows - 1);
        int d = imagemgreyscale.getRGB(cols - 1, rows);
        int e = imagemgreyscale.getRGB(cols, rows);
        int f = imagemgreyscale.getRGB(cols + 1, rows);
        int g = imagemgreyscale.getRGB(cols - 1, rows + 1);
        int h = imagemgreyscale.getRGB(cols, rows + 1);
        int i = imagemgreyscale.getRGB(cols + 1, rows + 1);

        // Verificando o pixel mais semelhante na imagem.
        for (int x = inicio.x; x < fim.x - 1; x++) {
            for (int y = inicio.y; y < fim.y - 1; y++) {
                int A = imagemcoloridaemgrayscale.getRGB(x - 1, y - 1);
                int B = imagemcoloridaemgrayscale.getRGB(x, y - 1);
                int C = imagemcoloridaemgrayscale.getRGB(x + 1, y - 1);
                int D = imagemcoloridaemgrayscale.getRGB(x - 1, y);
                int E = imagemcoloridaemgrayscale.getRGB(x, y);
                int F = imagemcoloridaemgrayscale.getRGB(x + 1, y);
                int G = imagemcoloridaemgrayscale.getRGB(x - 1, y + 1);
                int H = imagemcoloridaemgrayscale.getRGB(x, y + 1);
                int I = imagemcoloridaemgrayscale.getRGB(x + 1, y + 1);

                if (x == inicio.x && y == inicio.y) {
                    x1 = 1;
                    x2 = 1;
                    maissemelhante = (Math.abs(E - e) * 0.5) + 0.5 * (Math.abs(A - a) + Math.abs(B - b) + Math.abs(C - c) + Math.abs(D - d) + Math.abs(F - f) + Math.abs(G - g) + Math.abs(H - h) + Math.abs(I - i));
                } else {
                    double novo = (Math.abs(E - e) * 0.5) + 0.5 * (Math.abs(A - a) + Math.abs(B - b) + Math.abs(C - c) + Math.abs(D - d) + Math.abs(F - f) + Math.abs(G - g) + Math.abs(H - h) + Math.abs(I - i));
                    if (maissemelhante > novo) {
                        x1 = x;
                        x2 = y;
                        maissemelhante = novo;
                    }
                }
            }
        }

        return new Point(x1, x2);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCarregarColorida;
    private javax.swing.JButton btnCarregarGreyScale;
    private javax.swing.JButton btnColorize;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblImagemColorida;
    private javax.swing.JLabel lblImagemGreyScale;
    private javax.swing.JPanel pnlColoridaSwatch;
    private javax.swing.JPanel pnlColoridaSwatch1;
    private javax.swing.JPanel pnlColoridaSwatch2;
    private javax.swing.JPanel pnlGreyscaleSwatch;
    private javax.swing.JPanel pnlGreyscaleSwatch1;
    private javax.swing.JPanel pnlGreyscaleSwatch2;
    private javax.swing.JPanel pnlSwatch;
    private javax.swing.JTextField txtColoridaXPrimeiroSW1;
    private javax.swing.JTextField txtColoridaXPrimeiroSW2;
    private javax.swing.JTextField txtColoridaXSegundoSW1;
    private javax.swing.JTextField txtColoridaXSegundoSW2;
    private javax.swing.JTextField txtColoridaYPrimeiroSW1;
    private javax.swing.JTextField txtColoridaYPrimeiroSW2;
    private javax.swing.JTextField txtColoridaYSegundoSW1;
    private javax.swing.JTextField txtColoridaYSegundoSW2;
    private javax.swing.JTextField txtGrayscaleXPrimeiroSW1;
    private javax.swing.JTextField txtGrayscaleXPrimeiroSW2;
    private javax.swing.JTextField txtGrayscaleXSegundoSW1;
    private javax.swing.JTextField txtGrayscaleXSegundoSW2;
    private javax.swing.JTextField txtGrayscaleYPrimeiroSW1;
    private javax.swing.JTextField txtGrayscaleYPrimeiroSW2;
    private javax.swing.JTextField txtGrayscaleYSegundoSW1;
    private javax.swing.JTextField txtGrayscaleYSegundoSW2;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
}
